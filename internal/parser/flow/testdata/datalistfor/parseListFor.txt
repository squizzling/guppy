for a in b
-----
DataListFor(
  Idents: [
    a
  ]
  Expr: ExpressionList(
    Expressions: [
      ExpressionVariable(
        Identifier: string(b)
      )
    ]
    Tuple: bool(false)
  )
  Iter: nil
)
=====
for a in b if c
-----
DataListFor(
  Idents: [
    a
  ]
  Expr: ExpressionList(
    Expressions: [
      ExpressionVariable(
        Identifier: string(b)
      )
    ]
    Tuple: bool(false)
  )
  Iter: DataListIter(
    For: nil
    If: DataListIf(
      Expr: ExpressionVariable(
        Identifier: string(c)
      )
      Iter: nil
    )
  )
)
=====
for a in b for c in d
-----
DataListFor(
  Idents: [
    a
  ]
  Expr: ExpressionList(
    Expressions: [
      ExpressionVariable(
        Identifier: string(b)
      )
    ]
    Tuple: bool(false)
  )
  Iter: DataListIter(
    For: DataListFor(
      Idents: [
        c
      ]
      Expr: ExpressionList(
        Expressions: [
          ExpressionVariable(
            Identifier: string(d)
          )
        ]
        Tuple: bool(false)
      )
      Iter: nil
    )
    If: nil
  )
)
=====
?
-----
expecting FOR in parseListFor, found ERROR
=====
for ?
-----
expecting ID, found ERROR
=====
for a ?
-----
expecting IN in parseListFor, found ERROR
=====
for a in ?
-----
expecting LAMBDA in parseTestNoCond, found ERROR
=====
for a in b if ?
-----
expecting LAMBDA in parseTestNoCond, found ERROR
