a
-----
DataArgumentList(
  Args: [
    ExpressionVariable(
      Identifier: string(a)
    )
  ]
  NamedArgs: nil
  StarArg: nil
  KeywordArg: nil
)
=====
a,
-----
DataArgumentList(
  Args: [
    ExpressionVariable(
      Identifier: string(a)
    )
  ]
  NamedArgs: nil
  StarArg: nil
  KeywordArg: nil
)
=====
a,b
-----
DataArgumentList(
  Args: [
    ExpressionVariable(
      Identifier: string(a)
    )
    ExpressionVariable(
      Identifier: string(b)
    )
  ]
  NamedArgs: nil
  StarArg: nil
  KeywordArg: nil
)
=====
a,b,
-----
DataArgumentList(
  Args: [
    ExpressionVariable(
      Identifier: string(a)
    )
    ExpressionVariable(
      Identifier: string(b)
    )
  ]
  NamedArgs: nil
  StarArg: nil
  KeywordArg: nil
)
=====
*a
-----
DataArgumentList(
  Args: nil
  NamedArgs: nil
  StarArg: ExpressionVariable(
    Identifier: string(a)
  )
  KeywordArg: nil
)
=====
a,*b
-----
DataArgumentList(
  Args: [
    ExpressionVariable(
      Identifier: string(a)
    )
  ]
  NamedArgs: nil
  StarArg: ExpressionVariable(
    Identifier: string(b)
  )
  KeywordArg: nil
)
=====
*a,b
-----
DataArgumentList(
  Args: [
    ExpressionVariable(
      Identifier: string(b)
    )
  ]
  NamedArgs: nil
  StarArg: ExpressionVariable(
    Identifier: string(a)
  )
  KeywordArg: nil
)
=====
*a, **b
-----
DataArgumentList(
  Args: nil
  NamedArgs: nil
  StarArg: ExpressionVariable(
    Identifier: string(a)
  )
  KeywordArg: ExpressionVariable(
    Identifier: string(b)
  )
)
=====
*a, ?
-----
DataArgumentList(
  Args: nil
  NamedArgs: nil
  StarArg: ExpressionVariable(
    Identifier: string(a)
  )
  KeywordArg: nil
)
=====
**a
-----
DataArgumentList(
  Args: nil
  NamedArgs: nil
  StarArg: nil
  KeywordArg: ExpressionVariable(
    Identifier: string(a)
  )
)
=====
*a,b,c=d
-----
DataArgumentList(
  Args: [
    ExpressionVariable(
      Identifier: string(b)
    )
  ]
  NamedArgs: [
    DataArgument(
      Assign: string(c)
      Expr: ExpressionVariable(
        Identifier: string(d)
      )
    )
  ]
  StarArg: ExpressionVariable(
    Identifier: string(a)
  )
  KeywordArg: nil
)
=====
a + ?
-----
atom not supported: ERROR
=====
* ?
-----
atom not supported: ERROR
=====
*a,b + ?
-----
atom not supported: ERROR
=====
*a,**b + ?
-----
atom not supported: ERROR
=====
**a + ?
-----
atom not supported: ERROR
=====
a=b,c
-----
unnamed argument follows named argument
=====
*a,b=c,d
-----
unnamed argument follows named argument
